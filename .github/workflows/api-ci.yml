name: api-ci

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['main']

jobs:
  setup:
    name: Setup Backend
    runs-on: ubuntu-latest
    outputs:
      python-cache-key: ${{ steps.cache-python.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create empty .env file
        run: touch .env

      - name: Install dependencies
        run: make env-create

      - name: Save virtual environment
        uses: actions/cache@v4
        with:
          path: backend/app/.venv
          key: venv-${{ runner.os }}-python-3.10-${{ hashFiles('**/requirements*.txt') }}

  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore virtual environment
        uses: actions/cache@v4
        with:
          path: backend/app/.venv
          key: venv-${{ runner.os }}-python-3.10-${{ hashFiles('**/requirements*.txt') }}

      - name: Copy .env.example to .env
        run: cp .env.example .env
      
      - name: Run linter
        run: |
          source backend/app/.venv/bin/activate
          make lint

  tests-backend:
    name: Tests Backend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore virtual environment
        uses: actions/cache@v4
        with:
          path: backend/app/.venv
          key: venv-${{ runner.os }}-python-3.10-${{ hashFiles('**/requirements*.txt') }}

      - name: Run tests
        run: |
          source backend/app/.venv/bin/activate
          make test
